"""
Django settings for huafeng project.

Generated by 'django-admin startproject' using Django 1.8.14.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

import logging
import django.utils.log
import logging.handlers

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': True,
#     'formatters': {
#        'standard': {
#             'format': '%(asctime)s [%(threadName)s:%(thread)d] [%(name)s:%(lineno)d] [%(module)s:%(funcName)s] [%(levelname)s]- %(message)s'}  #日志格式
#     },
#     'filters': {
#     },
#     'handlers': {
#         'mail_admins': {
#             'level': 'ERROR',
#             'class': 'django.utils.log.AdminEmailHandler',
#             'include_html': True,
#         },
#         'default': {
#             'level':'DEBUG',
#             'class':'logging.handlers.RotatingFileHandler',
#             'filename': '/sourceDns/log/all.log',     #日志输出文件
#             'maxBytes': 1024*1024*5,                  #文件大小
#             'backupCount': 5,                         #备份份数
#             'formatter':'standard',                   #使用哪种formatters日志格式
#         },
#         'error': {
#             'level':'ERROR',
#             'class':'logging.handlers.RotatingFileHandler',
#             'filename': '/sourceDns/log/error.log',
#             'maxBytes':1024*1024*5,
#             'backupCount': 5,
#             'formatter':'standard',
#         },
#         'console':{
#             'level': 'DEBUG',
#             'class': 'logging.StreamHandler',
#             'formatter': 'standard'
#         },
#         'request_handler': {
#             'level':'DEBUG',
#             'class':'logging.handlers.RotatingFileHandler',
#             'filename': '/sourceDns/log/script.log',
#             'maxBytes': 1024*1024*5,
#             'backupCount': 5,
#             'formatter':'standard',
#         },
#         'scprits_handler': {
#             'level':'DEBUG',
#             'class':'logging.handlers.RotatingFileHandler',
#             'filename':'/sourceDns/log/script.log',
#             'maxBytes': 1024*1024*5,
#             'backupCount': 5,
#             'formatter':'standard',
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['default', 'console'],
#             'level': 'DEBUG',
#             'propagate': False
#         },
#         'django.request': {
#             'handlers': ['request_handler'],
#             'level': 'DEBUG',
#             'propagate': False,
#         },
#         'scripts': {
#             'handlers': ['scprits_handler'],
#             'level': 'INFO',
#             'propagate': False
#         },
#         'sourceDns.webdns.views': {
#             'handlers': ['default', 'error'],
#             'level': 'DEBUG',
#             'propagate': True
#         },
#         'sourceDns.webdns.util':{
#             'handlers': ['error'],
#             'level': 'ERROR',
#             'propagate': True
#         }
#     }
# }

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'o!fw(8^l!m#*rvb7q0(++4r2)ijim(%vc)5#qr-k35qy$0beb@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# celery settings
import djcelery
djcelery.setup_loader()
CELERY_TIMEZONE = 'Asia/Shanghai'
# 默认配置
# BROKER_URL = 'redis://127.0.0.1:6379/0'
# CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379/0'
# 实验室配置
BROKER_URL = 'redis://192.168.6.66'
CELERY_RESULT_BACKEND = 'redis://192.168.6.66'

CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'

# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'djcelery',
    'home',
    'dataCleaningRules',
    'dataCleaning',
    'dataCollect',
    # 'taskApp',
    # 'taskType',
    'dataProfile',
    'codeStandard',
    'shujujiankong',
    'catalogueManagement',
    'releaseRegisterManagement',
    'dataQualityAssessment',
    'dataQualityManagement',
    'problemData',
    'cataloguedataway',
    'dataway',
    'InterfaceCatalogue',
    'InterfaceJournal',
    'collectApp',
    'standardApp',
    'user',
    'errorApp',
    'UserManage',
    'dictionaryManage',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'huafeng.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'common/html')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'huafeng.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

COLLECTDB = 'collectdb'
STANDARDDB = 'standarddb'

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.oracle',
    #     'NAME': 'orcl',
    #     'USER': 'c##configuredb',
    #     'PASSWORD': '123456',
    #     'HOST': '192.168.6.99',
    #     'PORT': '1521',
    # },
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'configuredb',
        'USER': 'root',
        'PASSWORD': '123456',
        'HOST': '192.168.6.77',
        'PORT': '',
        'OPTIONS': {
            'autocommit': True,
        }
    },
    # 'collectdb': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'collectdb',
    #     'USER': 'root',
    #     'PASSWORD': '123456',
    #     'HOST': '192.168.6.77',
    #     'PORT': '',
    #     'OPTIONS': {
    #         'autocommit': True,
    #     }
    # },
    COLLECTDB: {
        'ENGINE': 'django.db.backends.oracle',
        'NAME': 'orcl',
        'USER': 'SJZX',
        'PASSWORD': '123456',
        'HOST': '192.168.6.77',
        'PORT': '1521',
    },

    STANDARDDB: {
        'ENGINE': 'django.db.backends.oracle',
        'NAME': 'ORCL',
        'USER': 'sjzx',
        'PASSWORD': '123456',
        'HOST': '192.168.6.77',
        'PORT': '1521',
    },
    'errordb': {
        'ENGINE': 'django.db.backends.oracle',
        'NAME': 'ORCL',
        'USER': 'sjzx',
        'PASSWORD': '123456',
        'HOST': '192.168.6.77',
        'PORT': '1521',
    },
    # 'errordb': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'errordb',
    #     'USER': 'root',
    #     'PASSWORD': '123456',
    #     'HOST': '192.168.6.77',
    #     'PORT': '',
    # }
    # DIRCTIONARYDB: {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'dataStandardCode',
    #     'USER': 'root',
    #     'PASSWORD': '123456',
    #     'HOST': '192.168.6.77',
    #     'PORT': '',
    # },

}

# use multi-database in django
DATABASE_ROUTERS = ['huafeng.database_router.DatabaseAppsRouter']
DATABASE_APPS_MAPPING = {
    # 'app_name':'database_name',
    # 'django.contrib.admin': 'default',
    # 'django.contrib.sessions': 'default',
    'djcelery': 'default',
    'dataCleaning': 'default',
    'dataCleaningRules': 'default',
    'dataCollect': 'default',
    'taskApp': 'default',
    'taskType': 'default',
    'dataProfile': 'default',
    'releaseRegisterManagement': 'default',
    'shujujiankong': 'default',
    'codeStandard': 'default',
    'catalogueManagement': 'default',
    'user': 'default',
    'dataQualityAssessment': 'default',
    'dataQualityManagement': 'default',
    'problemData': 'default',
    'cataloguedataway': 'default',
    'dataway': 'default',
    'InterfaceCatalogue': 'default',
    'InterfaceJournal': 'default',
    'collectApp': 'collectdb',
    'standardApp': 'standarddb',
    'errorApp': 'errordb',
    'UserManage': 'default',
    'admin': 'default',
    'auth': 'default',
    'contenttypes': 'default',
    'sessions': 'default',
    'messages': 'default',
    'staticfiles': 'default',
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = (os.path.join(BASE_DIR, "common"),)

DOWNLOAD_PATH = os.path.join(BASE_DIR, 'common/download')

# 自定义用户认证
AUTH_USER_MODEL = 'UserManage.User'

# 采集，清洗缓存文件存放路径
COLLECT_CLEAN_TEMP_DIR = os.path.dirname(BASE_DIR)
# 采集结点IP
COLLECT_NODE = ['192.168.6.66']
MASTER_HOST = '192.168.6.66'
PYTHON3_PATH = '/usr/local/python3/bin/python3'

# cookie时间
SESSION_COOKIE_AGE = 86400
